/*
 * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/* This file contains configuration settings for the demos. */

#ifndef IOT_CONFIG_H_
#define IOT_CONFIG_H_

#include "sdkconfig.h"

/* FreeRTOS include. */
#include "freertos/FreeRTOS.h"

/* For printf */
#include <stdio.h>

/* Use platform types on FreeRTOS. */
#include "platform/iot_platform_types_freertos.h"

/* Global */
#ifdef CONFIG_AWS_IOT_LOG_LEVEL_GLOBAL_NONE
#define IOT_LOG_LEVEL_GLOBAL IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_GLOBAL_ERROR
#define IOT_LOG_LEVEL_GLOBAL IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_GLOBAL_WARN
#define IOT_LOG_LEVEL_GLOBAL IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_GLOBAL_INFO
#define IOT_LOG_LEVEL_GLOBAL IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_GLOBAL_DEBUG
#define IOT_LOG_LEVEL_GLOBAL IOT_LOG_DEBUG
#endif

#ifdef CONFIG_AWS_IOT_STATIC_MEMORY_ONLY
#define IOT_STATIC_MEMORY_ONLY 1
#else
#define IOT_STATIC_MEMORY_ONLY 0
#endif

#define Iot_DefaultAssert( expression )        configASSERT( expression )

#if IOT_STATIC_MEMORY_ONLY == 0
#define Iot_DefaultMalloc    pvPortMalloc
#define Iot_DefaultFree      vPortFree
#endif

/* MQTT */
#ifdef CONFIG_AWS_IOT_MQTT_ENABLE_ASSERTS
#define IOT_MQTT_ENABLE_ASSERTS 1
#else
#define IOT_MQTT_ENABLE_ASSERTS 0
#endif

#ifdef CONFIG_AWS_IOT_MQTT_ENABLE_METRICS
#define AWS_IOT_MQTT_ENABLE_METRICS 1
#else
#define AWS_IOT_MQTT_ENABLE_METRICS 0
#endif

#ifdef CONFIG_AWS_IOT_MQTT_ENABLE_SERIALIZER_OVERRIDES
#define IOT_MQTT_ENABLE_SERIALIZER_OVERRIDES 1
#else
#define IOT_MQTT_ENABLE_SERIALIZER_OVERRIDES 0
#endif

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_MQTT_NONE
#define IOT_LOG_LEVEL_MQTT IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_MQTT_ERROR
#define IOT_LOG_LEVEL_MQTT IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_MQTT_WARN
#define IOT_LOG_LEVEL_MQTT IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_MQTT_INFO
#define IOT_LOG_LEVEL_MQTT IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_MQTT_DEBUG
#define IOT_LOG_LEVEL_MQTT IOT_LOG_DEBUG
#endif

#define IOT_MQTT_RESPONSE_WAIT_MS (CONFIG_AWS_IOT_MQTT_RESPONSE_WAIT_MS)
#define IOT_MQTT_RETRY_MS_CEILING (CONFIG_AWS_IOT_MQTT_RETRY_MS_CEILING)

#if IOT_STATIC_MEMORY_ONLY == 1
#define IOT_MQTT_CONNECTIONS (CONFIG_AWS_IOT_MQTT_CONNECTIONS)
#define IOT_MQTT_MAX_IN_PROGRESS_OPERATIONS (CONFIG_AWS_IOT_MQTT_MAX_IN_PROGRESS_OPERATIONS)
#define IOT_MQTT_SUBSCRIPTIONS (CONFIG_AWS_IOT_MQTT_SUBSCRIPTIONS)
#endif

/* Thing Shadow */
#ifdef CONFIG_AWS_IOT_SHADOW_ENABLE_ASSERTS
#define AWS_IOT_SHADOW_ENABLE_ASSERTS 1
#else
#define AWS_IOT_SHADOW_ENABLE_ASSERTS 0
#endif

#define AWS_IOT_SHADOW_DEFAULT_MQTT_TIMEOUT_MS (CONFIG_AWS_IOT_SHADOW_DEFAULT_MQTT_TIMEOUT_MS)

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_SHADOW_NONE
#define AWS_IOT_LOG_LEVEL_SHADOW IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_SHADOW_ERROR
#define AWS_IOT_LOG_LEVEL_SHADOW IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_SHADOW_WARN
#define AWS_IOT_LOG_LEVEL_SHADOW IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_SHADOW_INFO
#define AWS_IOT_LOG_LEVEL_SHADOW IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_SHADOW_DEBUG
#define AWS_IOT_LOG_LEVEL_SHADOW IOT_LOG_DEBUG
#endif

#if IOT_STATIC_MEMORY_ONLY == 1
#define AWS_IOT_SHADOW_MAX_IN_PROGRESS_OPERATIONS (CONFIG_AWS_IOT_SHADOW_MAX_IN_PROGRESS_OPERATIONS)
#define AWS_IOT_SHADOW_SUBSCRIPTIONS (CONFIG_AWS_IOT_SHADOW_SUBSCRIPTIONS)
#endif

/* Jobs */
#ifdef CONFIG_AWS_IOT_JOBS_ENABLE_ASSERTS
#define AWS_IOT_JOBS_ENABLE_ASSERTS 1
#else
#define AWS_IOT_JOBS_ENABLE_ASSERTS 0
#endif

#define AWS_IOT_JOBS_DEFAULT_MQTT_TIMEOUT_MS (CONFIG_AWS_IOT_JOBS_DEFAULT_MQTT_TIMEOUT_MS)

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_JOBS_NONE
#define AWS_IOT_LOG_LEVEL_JOBS IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_JOBS_ERROR
#define AWS_IOT_LOG_LEVEL_JOBS IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_JOBS_WARN
#define AWS_IOT_LOG_LEVEL_JOBS IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_JOBS_INFO
#define AWS_IOT_LOG_LEVEL_JOBS IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_JOBS_DEBUG
#define AWS_IOT_LOG_LEVEL_JOBS IOT_LOG_DEBUG
#endif

#if IOT_STATIC_MEMORY_ONLY == 1
#define AWS_IOT_JOBS_MAX_IN_PROGRESS_OPERATIONS (CONFIG_AWS_IOT_JOBS_MAX_IN_PROGRESS_OPERATIONS)
#define AWS_IOT_JOBS_SUBSCRIPTIONS (CONFIG_AWS_IOT_JOBS_SUBSCRIPTIONS)
#endif

/* Defender */
#ifdef CONFIG_AWS_IOT_SECURE_SOCKETS_METRICS_ENABLED
#define AWS_IOT_SECURE_SOCKETS_METRICS_ENABLED 1
#else
#define AWS_IOT_SECURE_SOCKETS_METRICS_ENABLED 0
#endif

#ifdef CONFIG_AWS_IOT_DEFENDER_FORMAT_CBOR
#define AWS_IOT_DEFENDER_FORMAT AWS_IOT_DEFENDER_FORMAT_CBOR
#endif

#ifdef CONFIG_AWS_IOT_DEFENDER_USE_LONG_TAG
#define AWS_IOT_DEFENDER_USE_LONG_TAG 1
#else
#define AWS_IOT_DEFENDER_USE_LOG_TAG 0
#endif

#define AWS_IOT_DEFENDER_DEFAULT_PERIOD_SECONDS (CONFIG_AWS_IOT_DEFENDER_DEFAULT_PERIOD_SECONDS)
#define AWS_IOT_DEFENDER_MQTT_CONNECT_TIMEOUT_SECONDS (CONFIG_AWS_IOT_DEFENDER_MQTT_CONNECT_TIMEOUT_SECONDS)
#define AWS_IOT_DEFENDER_MQTT_SUBSCRIBE_TIMEOUT_SECONDS (CONFIG_AWS_IOT_DEFENDER_MQTT_SUBSCRIBE_TIMEOUT_SECONDS) 
#define AWS_IOT_DEFENDER_MQTT_PUBLISH_TIMEOUT_SECONDS (CONFIG_AWS_IOT_DEFENDER_MQTT_PUBLISH_TIMEOUT_SECONDS)

/* Containers */
#ifdef CONFIG_AWS_IOT_CONTAINERS_ENABLE_ASSERTS
#define IOT_CONTAINERS_ENABLE_ASSERTS 1
#else
#define IOT_CONTAINERS_ENABLE_ASSERTS 0
#endif

/* Logging */
#define IotLogging_Puts( str )    printf( "%s\r\n", str )
#define IotLogging_Malloc    pvPortMalloc
#define IotLogging_Free      vPortFree

/* Static Memory */
#if IOT_STATIC_MEMORY_ONLY == 1
#define IOT_MESSAGE_BUFFERS (CONFIG_AWS_IOT_MESSAGE_BUFFERS)
#define IOT_MESSAGE_BUFFER_SIZE (CONFIG_AWS_IOT_MESSAGE_BUFFER_SIZE)
#endif

/* Task Pool */
#define IOT_TASKPOOL_JOB_WAIT_TIMEOUT_MS (CONFIG_AWS_IOT_TASKPOOL_JOB_WAIT_TIMEOUT_MS)
#define IOT_TASKPOOL_JOBS_RECYCLE_LIMIT (CONFIG_AWS_IOT_TASKPOOL_JOBS_RECYCLE_LIMIT)
#ifdef CONFIG_AWS_IOT_TASKPOOL_ENABLE_ASSERTS
#define IOT_TASKPOOL_ENABLE_ASSERTS 1
#else
#define IOT_TASKPOOL_ENABLE_ASSERTS 0
#endif

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_TASKPOOL_NONE
#define IOT_LOG_LEVEL_TASKPOOL IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_TASKPOOL_ERROR
#define IOT_LOG_LEVEL_TASKPOOL IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_TASKPOOL_WARN
#define IOT_LOG_LEVEL_TASKPOOL IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_TASKPOOL_INFO
#define IOT_LOG_LEVEL_TASKPOOL IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_TASKPOOL_DEBUG
#define IOT_LOG_LEVEL_TASKPOOL IOT_LOG_DEBUG
#endif

/* Platform */
#ifdef CONFIG_AWS_IOT_ATOMIC_USE_PORT
#define IOT_ATOMIC_USE_PORT 1
#else
#define IOT_ATOMIC_USE_PORT 0
#endif

#define IotNetwork_Malloc    pvPortMalloc
#define IotNetwork_Free      vPortFree
#define IotThreads_Malloc    pvPortMalloc
#define IotThreads_Free      vPortFree

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_PLATFORM_NONE
#define IOT_LOG_LEVEL_PLATFORM IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_PLATFORM_ERROR
#define IOT_LOG_LEVEL_PLATFORM IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_PLATFORM_WARN
#define IOT_LOG_LEVEL_PLATFORM IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_PLATFORM_INFO
#define IOT_LOG_LEVEL_PLATFORM IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_PLATFORM_DEBUG
#define IOT_LOG_LEVEL_PLATFORM IOT_LOG_DEBUG
#endif

#ifdef CONFIG_AWS_IOT_LOG_LEVEL_NETWORK_NONE
#define IOT_LOG_LEVEL_NETWORK IOT_LOG_NONE
#elif CONFIG_AWS_IOT_LOG_LEVEL_NETWORK_ERROR
#define IOT_LOG_LEVEL_NETWORK IOT_LOG_ERROR
#elif CONFIG_AWS_IOT_LOG_LEVEL_NETWORK_WARN
#define IOT_LOG_LEVEL_NETWORK IOT_LOG_WARN
#elif CONFIG_AWS_IOT_LOG_LEVEL_NETWORK_INFO
#define IOT_LOG_LEVEL_NETWORK IOT_LOG_INFO
#elif CONFIG_AWS_IOT_LOG_LEVEL_NETWORK_DEBUG
#define IOT_LOG_LEVEL_NETWORK IOT_LOG_DEBUG
#endif

#define IOT_THREAD_DEFAULT_STACK_SIZE (CONFIG_AWS_IOT_THREAD_DEFAULT_STACK_SIZE)
#define IOT_THREAD_DEFAULT_PRIORITY (CONFIG_AWS_IOT_THREAD_DEFAULT_PRIORITY)

#endif /* ifndef IOT_CONFIG_H_ */
